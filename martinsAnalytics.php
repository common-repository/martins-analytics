<?php
/**
 * Plugin Name:       Martins Analytics
 * Plugin URI:        https://martinstools.com/en/analytics
 * Description:       Martin's Analytics, a GDPR, CCPA, PIPEDA friendly alternative to Google Analytics, is simple statistics for your website, that are easy to understand without a lot of disruptive elements. Statistics in 1 page, having only the most important informations.
 * Version:           1.0.0
 * Requires at least: 4.7
 * Requires PHP:      7.0
 * Author:            Martins Tools
 * Author URI:        https://martinstools.com
 * License:           GPLv2 or later
 * License URI:       https://www.gnu.org/licenses/gpl-2.0.html
 * Text Domain:       martinsAnalytics
 * Domain Path:       /languages
 */

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class martinsAnalyticsAdmin 
{
	private $martins_analytics_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'martins_analytics_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'martins_analytics_page_init' ) );
	}

	public function martins_analytics_add_plugin_page() {
		add_menu_page(
			'Martins Analytics', // page_title
			'Martins Analytics', // menu_title
			'manage_options', // capability
			'martins-analytics', // menu_slug
			array( $this, 'martins_analytics_create_admin_page' ), // function
			'dashicons-admin-settings', // icon_url
			80 // position
		);
	}

	public function martins_analytics_create_admin_page() {
		$this->martins_analytics_options = get_option( 'martins_analytics_option_name' );

		echo("<div class='wrap'>");
                    echo("<h2>Martins Analytics</h2>");
                    echo("<p>Martin's Analytics, a GDPR, CCPA, PIPEDA friendly alternative to Google Analytics, is simple statistics for your website, that are easy to understand without a lot of disruptive elements.<br />Statistics in 1 page, having only the most important informations.</p>");
                        
                    echo("<h3>Create account</h3>");
                    echo("<p>You need to create a Martins Analytics account, to enable statistics for your website.<br /><a href='https://martinstools.com/en/analytics' target='_blank' class='button button-secondary'>Click here</a> to create an account and get a website ID.</p>");
                    echo("<br /><br />");
                        
                    settings_errors();

                    echo("<form method='post' action='options.php'>");
                    settings_fields( 'martins_analytics_option_group' );
                    do_settings_sections( 'martins-analytics-admin' );
                    submit_button();
		    echo("</form>");
		echo("</div>");
	}

	public function martins_analytics_page_init() {
		register_setting(
			'martins_analytics_option_group', // option_group
			'martins_analytics_option_name', // option_name
			array( $this, 'martins_analytics_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'martins_analytics_setting_section', // id
			'Settings', // title
			array( $this, 'martins_analytics_section_info' ), // callback
			'martins-analytics-admin' // page
		);

		add_settings_field(
			'website_id_0', // id
			'Enter your website ID from Martins Analytics', // title
			array( $this, 'website_id_0_callback' ), // callback
			'martins-analytics-admin', // page
			'martins_analytics_setting_section' // section
		);
	}

	public function martins_analytics_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['website_id_0'] ) ) {
			$sanitary_values['website_id_0'] = sanitize_text_field( $input['website_id_0'] );
		}

		return $sanitary_values;
	}

	public function martins_analytics_section_info() {
		
	}

	public function website_id_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="martins_analytics_option_name[website_id_0]" id="website_id_0" value="%s">',
			isset( $this->martins_analytics_options['website_id_0'] ) ? esc_attr( $this->martins_analytics_options['website_id_0']) : ''
		);
	}

}


class martinsAnalyticsFront 
{
    private $websiteId;
    
    public function __construct() {
        $this->websiteId = $this->getWebsiteId();
    }

    public function insertMainScript() {
        if ($this->websiteId && $this->websiteId <> "") {
            wp_enqueue_script("martins_analytics", "https://analytics.martinstools.com/analytics.js", [], false, true);
            add_filter('script_loader_tag', [$this, 'setAttributes'], 10, 2);
        }
    }
    
    public function insertInlineScript() {
        if ($this->websiteId && $this->websiteId <> "") {
            wp_add_inline_script("martins_analytics", "window.martinsAnalytics=window.martinsAnalytics||function(){(window.martinsAnalytics.q=window.martinsAnalytics.q||[]).push(arguments)};martinsAnalytics('pageview');");
        }
    }

    public function setAttributes($tag, $handle) {
        if ($this->websiteId && $this->websiteId <> "" && $handle == 'martins_analytics') {
            return str_replace(" src", " defer data-id='" . $this->websiteId . "' src", $tag);
        }
        else {
            return $tag;
        }
    }

    public function getWebsiteId() {
        $options = get_option( 'martins_analytics_option_name' ); // Array of All Options
        return $options['website_id_0']; // Website ID
    }
}



if (is_admin()) {
    $martinsAnalyticsAdmin = new martinsAnalyticsAdmin();
}
else {
    $martinsAnalyticsFront = new martinsAnalyticsFront();
    add_action( 'wp_enqueue_scripts', [$martinsAnalyticsFront, "insertMainScript"] );
    add_action( 'wp_enqueue_scripts', [$martinsAnalyticsFront, "insertInlineScript"] );
}